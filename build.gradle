plugins {
    id 'java-library'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'com.gradle.plugin-publish' version '0.18.0'
}

group libraryGroup
version libraryVersion

repositories {
    mavenCentral()
    google()
    mavenLocal() // TODO remove
    maven { url 'https://jitpack.io' }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "net.coobird:thumbnailator:$thumbnailatorVersion"
    implementation "io.github.14v:svg-non-stop:$svgNonStopVersion"
    implementation "com.android.tools:sdk-common:$androidToolsVersion"
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

pluginBundle {
    website = libraryWebsite
    vcsUrl = libraryWebsite
    tags = ['android', 'android svg', 'android vector', 'android icon']
}

gradlePlugin {
    plugins {
        iconDivvy {
            id = libraryGroup
            displayName = libraryDisplayName
            description = libraryDescription
            implementationClass = 'com.cyphercove.icondivvy.IconDivvyPlugin'
        }
    }
}

jar {
    from project.sourceSets.main.output
    archiveBaseName.set(libraryArtifact)
}

java {
    withJavadocJar()
    withSourcesJar()
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
}

publishing {
    publications {
        "$libraryArtifact"(MavenPublication) {
            artifactId = libraryArtifact
            from components.java
            pom {
                name = libraryArtifact
                description = libraryDescription
                url = libraryUrl
                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
                organization {
                    name.set("Cypher Cove")
                    url.set("www.cyphercove.com")
                }
                scm {
                    connection.set("scm:git:git@github.com:cyphercove/icondivvy.git")
                    developerConnection.set("scm:git:git@cyphercove/icondivvy.git")
                    url.set(libraryUrl)
                }
            }
        }
    }
}